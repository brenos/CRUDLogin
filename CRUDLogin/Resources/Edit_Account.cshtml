@model CRUDLogin.Models.LoginModel

@{
    ViewBag.Title = "Usuário";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Alterar Usuário</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.UserName)
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Perfil")
        <div class="col-md-10">
            @if (User.IsInRole("Administrador"))
            {
                foreach (var role in Roles.GetAllRoles())
                {
                    @Html.RadioButton("Role", role, Roles.FindUsersInRole(role, Model.UserName).Length > 0, new { @class = "flat-red" })
                    @Html.DisplayName(" " + role)
                    @Html.DisplayName("  ")
                }
            }
            else
            {
                foreach (var role in Roles.GetAllRoles())
                {
                    @Html.RadioButton("Role", role, Roles.FindUsersInRole(role, Model.UserName).Length > 0, new { @class = "flat-red", disabled = "disabled" })
                    @Html.Hidden("Role", role)
                    @Html.DisplayName(" " + role)
                    @Html.DisplayName("  ")
                }
            }
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @if (User.IsInRole("Administrador"))
    {
        @Html.ActionLink("Voltar", "Index")
    }
    else
    {
        @Html.ActionLink("Voltar", "Details")
    }
</div>