@model IEnumerable<CRUDLogin.Models.LoginModel>

@{
    ViewBag.Title = "Usuários";
}

<h2>Usuários</h2>

<p>
    @Html.ActionLink("Novo Usuário", "Create")
</p>
<table class="table">
    <tr>
        <th>@Html.DisplayNameFor(model => model.Name)</th>
        <th>@Html.DisplayNameFor(model => model.UserName)</th>
        <th>@Html.DisplayNameFor(model => model.Email)</th>
        <th>@Html.DisplayName("Perfil")</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @foreach (var role in Roles.GetAllRoles())
                {
                    if (Roles.FindUsersInRole(role, item.UserName).Length > 0)
                    {
                        @Html.DisplayName(role);
                    }
                }
            </td>
            <td>
                @Html.ActionLink("Alterar", "Edit", "Account", new { username = item.UserName }) |
                @Html.ActionLink("Detalhes", "Details", "Account", new { username = item.UserName }) |
                @Html.ActionLink("Excluir", "Delete", "Account", new { username = item.UserName })
                @if (User.IsInRole("Administrador"))
                {
                    @Html.Label(" | ")
                    @Html.ActionLink("Alterar Senha", "ResetPassword", "Account", new { username = item.UserName })
                }
            </td>
        </tr>

    }

</table>